{"version":3,"sources":["store/reducers/action-types.js","store/reducers/auth/index.js","store/reducers/event/index.js","store/reducers/index.js","store/index.js","firebase/index.js","store/reducers/auth/action-creators.js","components/EventsCalendar.jsx","components/EventForm.jsx","store/reducers/event/action-creators.js","pages/Event.jsx","components/LoginForm.jsx","pages/Login.jsx","components/RegistrationForm.jsx","pages/Registration.jsx","components/AppRouter.jsx","components/Header.jsx","App.js","index.js"],"names":["SET_AUTH","SET_IS_LOADING","SET_ERROR","SET_USER","SET_EVENTS","ADD_EVENT","initialState","isAuth","isLoading","user","error","events","auth","state","action","type","payload","event","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","getAuth","database","getDatabase","dbRef","ref","AuthActionCreators","setUser","setIsAuth","setIsLoading","setError","login","email","password","dispatch","a","signInWithEmailAndPassword","then","userCredential","uid","catch","logout","signOut","EventsList","styled","ul","EventCalendar","useState","modalVisible","setModalVisible","selectedEvents","setSelectedEvents","fullscreen","style","width","dateCellRender","value","formatedDate","format","currentDayEvents","filter","el","date","isPastEvents","isSameOrBefore","moment","map","i","className","description","onSelect","currentEvents","length","title","visible","footer","onCancel","EventForm","submit","setEvent","onFinish","labelCol","span","Item","label","name","rules","required","message","TextArea","rows","onChange","e","target","getFieldValue","validator","_","isSameOrAfter","Promise","resolve","reject","Error","selectDate","justify","htmlType","EventActionCreators","setEvents","addEvent","uploadEvents","newEvent","emailHash","MD5","toString","set","console","getEvents","get","child","snapshot","exists","val","Event","useDispatch","useSelector","useEffect","locale","success","position","bottom","right","placement","size","shape","onClick","icon","PlusOutlined","LoginForm","setEmail","setPassword","formRef","createRef","placeholder","Password","loading","to","current","setFieldsValue","fillForm","StyledLoginWrapper","div","Login","RegistrationForm","createUserWithEmailAndPassword","StyledRegistrationWrapper","Registration","AppRouter","path","exact","component","UserName","Header","router","useHistory","UserOutlined","theme","mode","selectable","push","App","onAuthStateChanged","Content","Footer","textAlign","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fce6156c.chunk.js","sourcesContent":["export const SET_AUTH = \"SET_AUTH\";\r\nexport const SET_IS_LOADING = \"SET_IS_LOADING\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const SET_EVENTS = \"SET_EVENTS\";\r\nexport const ADD_EVENT = \"ADD_EVENT\";","import { SET_AUTH, SET_ERROR, SET_IS_LOADING, SET_USER } from \"../action-types\";\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    isLoading: false,\r\n    user: {},\r\n    error: \"\",\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_AUTH:\r\n            return { ...state, isAuth: action.payload, isLoading: false };\r\n        case SET_USER:\r\n            return { ...state, user: action.payload };\r\n        case SET_IS_LOADING:\r\n            return { ...state, isLoading: action.payload };\r\n        case SET_ERROR:\r\n            return { ...state, error: action.payload, isLoading: false };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_EVENT, SET_EVENTS } from \"../action-types\";\r\n\r\nconst initialState = {\r\n    events: []\r\n}\r\n\r\nexport default function eventReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_EVENTS:\r\n            return { ...state, events: action.payload };\r\n        case ADD_EVENT: {\r\n            return { ...state, events: [...state.events, action.payload] }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import auth from \"./auth\";\r\nimport event from \"./event\";\r\n\r\nexport default { auth, event };","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\"\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase, ref } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth(app);\r\nexport const database = getDatabase(app);\r\nexport const dbRef = ref(database);","import { SET_AUTH, SET_ERROR, SET_IS_LOADING, SET_USER } from \"../action-types\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../../../firebase\";\r\n\r\nexport const AuthActionCreators = {\r\n    setUser: (user) => {\r\n        return { type: SET_USER, payload: user }\r\n    },\r\n    setIsAuth: (auth) => {\r\n        return { type: SET_AUTH, payload: auth }\r\n    },\r\n    setIsLoading: (isLoading) => {\r\n        return { type: SET_IS_LOADING, payload: isLoading }\r\n    },\r\n    setError: (error) => {\r\n        return { type: SET_ERROR, payload: error }\r\n    },\r\n\r\n    login: (email, password) => async (dispatch) => {\r\n        dispatch(AuthActionCreators.setIsLoading(true));\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                const user = userCredential.user;\r\n                dispatch(AuthActionCreators.setUser({ email: user.email, uid: user.uid }));\r\n                dispatch(AuthActionCreators.setIsAuth(true));\r\n                dispatch(AuthActionCreators.setError(\"\"));\r\n                dispatch(AuthActionCreators.setIsLoading(false));\r\n            })\r\n            .catch((error) => {\r\n                dispatch(AuthActionCreators.setError(\"Неправильный логин или пароль\"));\r\n            });\r\n    },\r\n    logout: () => async (dispatch) => {\r\n        auth.signOut();\r\n        dispatch(AuthActionCreators.setUser({}));\r\n        dispatch(AuthActionCreators.setIsAuth(false));\r\n    },\r\n}","import React, { useState } from 'react';\r\nimport { Calendar, Modal } from \"antd\";\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\n\r\nconst EventsList = styled.ul`\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: inside;\r\n    list-style-type: circle;\r\n\r\n    li {\r\n        width: 100%;\r\n        overflow: hidden;\r\n        font-size: 14px;\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n    }\r\n\r\n    .past-date {\r\n        color: lightblue;\r\n    }\r\n\r\n    .future-date {\r\n        color: blue;\r\n    }\r\n`;\r\n\r\n\r\nconst EventCalendar = ({ events }) => {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [selectedEvents, setSelectedEvents] = useState([]);\r\n\r\n    function dateCellRender(value) {\r\n        const formatedDate = value.format('YYYY-MM-DD');\r\n        const currentDayEvents = events.filter(el => el.date === formatedDate);\r\n        let isPastEvents = value.isSameOrBefore(moment());\r\n        return (\r\n            <EventsList>\r\n                {currentDayEvents.map((el, i) =>\r\n                    <li className={isPastEvents ? \"past-date\" : \"future-date\"} key={i}>{el.description}</li>\r\n                )}\r\n            </EventsList>\r\n        );\r\n    }\r\n\r\n    const selectDate = value => {\r\n        let formatedDate = value.format('YYYY-MM-DD');\r\n        let currentEvents = events.filter(el => el.date === formatedDate);\r\n        if (currentEvents.length > 0) {\r\n            setModalVisible(true);\r\n            setSelectedEvents(currentEvents);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Calendar\r\n                fullscreen={true}\r\n                style={{ width: \"800px\" }}\r\n                dateCellRender={dateCellRender}\r\n                onSelect={selectDate}\r\n            />\r\n            <Modal\r\n                title=\"Список событий\"\r\n                visible={modalVisible}\r\n                footer={null}\r\n                onCancel={() => setModalVisible(false)}\r\n            >\r\n                <ul>\r\n                    {selectedEvents.map((el, i) =>\r\n                        <li key={i}>{el.description}</li>\r\n                    )}\r\n                </ul>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventCalendar;\r\n","import React, { useState } from 'react';\r\nimport { DatePicker, Form, Input, Button, Row } from \"antd\";\r\nimport moment from 'moment';\r\n\r\nconst EventForm = ({ submit }) => {\r\n\r\n    const [event, setEvent] = useState({\r\n        date: \"\",\r\n        description: \"\"\r\n    });\r\n\r\n    const selectDate = date => {\r\n        date && setEvent({ ...event, date: date.format('YYYY-MM-DD') });\r\n    }\r\n\r\n    return (\r\n        <Form onFinish={() => submit(event)} labelCol={{ span: 6 }}>\r\n            <Form.Item\r\n                label=\"Описание:\"\r\n                name=\"decription\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Добавьте описание события\"\r\n                    }\r\n                ]}\r\n            >\r\n                <Input.TextArea\r\n                    rows={5}\r\n                    value={event.description}\r\n                    onChange={(e => setEvent({ ...event, description: e.target.value }))}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Дата:\"\r\n                name=\"date\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Выберите дату\"\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                            if (value.isSameOrAfter(moment())) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject(new Error(\"Выбранная дата уже прошла\"));\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <DatePicker onChange={date => selectDate(date)} />\r\n            </Form.Item>\r\n\r\n            <Row justify=\"end\">\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">Создать</Button>\r\n                </Form.Item>\r\n            </Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default EventForm;\r\n","import { SET_EVENTS, ADD_EVENT } from \"../action-types\";\r\nimport { dbRef, database } from \"../../../firebase\";\r\nimport { ref, set, get, child } from \"firebase/database\";\r\nimport { MD5 } from \"crypto-js\";\r\n\r\n\r\nexport const EventActionCreators = {\r\n    setEvents: (events) => {\r\n        return { type: SET_EVENTS, payload: events }\r\n    },\r\n    addEvent: (event) => {\r\n        return { type: ADD_EVENT, payload: event }\r\n    },\r\n    uploadEvents: (user, events, newEvent) => async dispatch => {\r\n        try {\r\n            let emailHash = MD5(user.email).toString();\r\n\r\n            set(ref(database, emailHash), {\r\n                events: [...events, newEvent]\r\n            });\r\n            dispatch(EventActionCreators.addEvent(newEvent));\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    },\r\n    getEvents: (user) => async dispatch => {\r\n        try {\r\n            let events = [];\r\n            let emailHash = MD5(user.email).toString();\r\n\r\n            await get(child(dbRef, emailHash)).then((snapshot) => {\r\n                if (snapshot.exists()) {\r\n                    events = snapshot.val().events;\r\n                }\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n\r\n            dispatch(EventActionCreators.setEvents(events));\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n}","import { Layout, Row, Button, Modal, message, Affix, Tooltip, ConfigProvider } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from 'react'\r\nimport EventCalendar from '../components/EventsCalendar';\r\nimport EventForm from '../components/EventForm';\r\nimport { EventActionCreators } from \"../store/reducers/event/action-creators\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport 'moment/locale/ru';\r\nimport locale from 'antd/lib/locale/ru_RU';\r\n\r\n\r\nconst Event = () => {\r\n    const dispatch = useDispatch();\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const { events } = useSelector(state => state.event);\r\n    const { user } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(EventActionCreators.getEvents(user));\r\n    }, [])\r\n\r\n    const submitForm = (newEvent) => {\r\n        setModalVisible(false);\r\n        dispatch(EventActionCreators.uploadEvents(user, events, newEvent));\r\n        message.success(\"Событие добавлено\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <ConfigProvider locale={locale}>\r\n                    <Row justify=\"center\" >\r\n                        <EventCalendar events={events} />\r\n                    </Row>\r\n                    <Row justify=\"center\">\r\n                    </Row>\r\n                    <Modal\r\n                        title=\"Добавить новое событие\"\r\n                        visible={modalVisible}\r\n                        footer={null}\r\n                        onCancel={() => setModalVisible(false)}\r\n                    >\r\n                        <EventForm submit={submitForm} />\r\n                    </Modal>\r\n                </ConfigProvider>\r\n            </Layout>\r\n            <Affix style={{ position: 'fixed', bottom: 20, right: 20 }} >\r\n                <Tooltip placement=\"left\" title=\"Добавить новое событие\">\r\n                    <Button\r\n                        type=\"primary\"\r\n                        size=\"large\"\r\n                        shape=\"circle\"\r\n                        onClick={() => setModalVisible(!modalVisible)}\r\n                        icon={<PlusOutlined />}\r\n                    >\r\n                    </Button>\r\n                </Tooltip>\r\n            </Affix>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Event;\r\n","import React, { createRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Input, Button, message, Tooltip } from \"antd\";\r\nimport { AuthActionCreators } from \"../store/reducers/auth/action-creators\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst LoginForm = () => {\r\n\r\n    const { error, isLoading } = useSelector(state => state.auth);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const formRef = createRef();\r\n    const dispatch = useDispatch();\r\n\r\n    const submitForm = () => {\r\n        dispatch(AuthActionCreators.login(email, password));\r\n    }\r\n\r\n    const fillForm = () => {\r\n        let email = \"test@test.test\";\r\n        let password = \"testpass\"\r\n        formRef.current.setFieldsValue({\r\n            email,\r\n            password,\r\n        });\r\n        setEmail(email);\r\n        setPassword(password);\r\n    }\r\n\r\n    const errorMessage = () => {\r\n        message.error(error);\r\n        dispatch(AuthActionCreators.setError(\"\"));\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"login\"\r\n            ref={formRef}\r\n            onFinish={submitForm}\r\n        >\r\n            {\r\n                error && errorMessage()\r\n            }\r\n\r\n            <Form.Item name=\"email\" rules={[{ required: true, message: \"Введите email\" }]} >\r\n                <Input value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: \"Введите пароль\" }]} >\r\n                <Input.Password value={password} placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoading} style={{ width: \"100%\" }}>Login</Button>\r\n                <span>Or </span>\r\n                <Link to=\"/registration\">register</Link>\r\n            </Form.Item>\r\n\r\n            <Tooltip title=\"тестовый пользователь\">\r\n                <Button type=\"dashed\" htmlType=\"button\" onClick={() => fillForm()}>test user</Button>\r\n            </Tooltip>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport { Layout, Card } from 'antd';\r\nimport LoginForm from '../components/LoginForm';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoginWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: calc(100vh - 128px);\r\n`;\r\n\r\nconst Login = () => {\r\n    return (\r\n        <Layout>\r\n            <StyledLoginWrapper>\r\n                <Card>\r\n                    <LoginForm />\r\n                </Card>\r\n            </StyledLoginWrapper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { AuthActionCreators } from \"../store/reducers/auth/action-creators\";\r\nimport { Link } from 'react-router-dom';\r\nimport { createUserWithEmailAndPassword } from '@firebase/auth';\r\nimport { auth } from '../firebase';\r\n\r\n\r\nconst RegistrationForm = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const submitForm = () => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                dispatch(AuthActionCreators.login(email, password));\r\n            })\r\n            .catch((error) => {\r\n                message.error(error.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            name=\"registration\"\r\n            onFinish={submitForm}\r\n        >\r\n            <Form.Item name=\"email\" rules={[{ required: true, message: \"Введите email\" }]} >\r\n                <Input value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: \"Введите пароль\" }]} >\r\n                <Input.Password value={password} placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>Registration</Button>\r\n                <span>Or </span>\r\n                <Link to=\"/login\">login</Link>\r\n            </Form.Item>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import React from 'react';\r\nimport { Layout, Card } from 'antd';\r\nimport RegistrationForm from '../components/RegistrationForm';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledRegistrationWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: calc(100vh - 128px);\r\n`;\r\n\r\nconst Registration = () => {\r\n    return (\r\n        <Layout>\r\n            <StyledRegistrationWrapper>\r\n                <Card>\r\n                    <RegistrationForm />\r\n                </Card>\r\n            </StyledRegistrationWrapper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Registration;\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Event from \"../pages/Event\";\r\nimport Login from \"../pages/Login\";\r\nimport Registration from '../pages/Registration';\r\n\r\nconst AppRouter = () => {\r\n    const { isAuth } = useSelector(state => state.auth);\r\n\r\n    return (\r\n        isAuth\r\n            ?\r\n            <Switch>\r\n                <Route\r\n                    path={\"/\"}\r\n                    exact={true}\r\n                    component={Event}\r\n                />\r\n                <Redirect to={\"/\"} />\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                <Route\r\n                    path={\"/registration\"}\r\n                    exact={true}\r\n                    component={Registration}\r\n                />\r\n                <Route\r\n                    path={\"/login\"}\r\n                    exact={true}\r\n                    component={Login}\r\n                />\r\n                <Redirect to={\"/login\"} />\r\n            </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React from 'react'\r\nimport { Layout, Row, Menu, Space, Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AuthActionCreators } from '../store/reducers/auth/action-creators';\r\nimport styled from 'styled-components';\r\n\r\nconst UserName = styled.div`\r\n    color: white;\r\n    max-width: 160px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\nconst Header = () => {\r\n    const router = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { isAuth, user } = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <Layout.Header>\r\n            <Row justify=\"end\">\r\n                {\r\n                    isAuth\r\n                        ?\r\n                        <Space>\r\n                            <Avatar icon={<UserOutlined />} />\r\n                            <UserName>{user.email}</UserName>\r\n                            <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n                                <Menu.Item key={1} onClick={() => dispatch(AuthActionCreators.logout())}>\r\n                                    Logout\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                        </Space>\r\n                        :\r\n                        <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n                            <Menu.Item key={2} onClick={() => router.push(\"/login\")}>\r\n                                Login\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                }\r\n            </Row>\r\n        </Layout.Header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import { Layout } from 'antd';\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AuthActionCreators } from \"./store/reducers/auth/action-creators\";\nimport AppRouter from \"./components/AppRouter\";\nimport Header from \"./components/Header\";\n\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\n\nconst App = () => {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tonAuthStateChanged(auth, (user) => {\n\t\t\tif (user) {\n\t\t\t\tdispatch(AuthActionCreators.setUser({ email: user.email, uid: user.uid }));\n\t\t\t\tdispatch(AuthActionCreators.setIsAuth(true));\n\t\t\t}\n\t\t})\n\t})\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Header />\n\t\t\t<Layout.Content>\n\t\t\t\t<AppRouter />\n\t\t\t</Layout.Content>\n\t\t\t<Layout.Footer style={{ textAlign: 'center' }}>\n\t\t\t\t<span> ©2021 </span>\n\t\t\t\t<a href=\"https://github.com/Nokkup/event-calendar\">Github link</a>\n\t\t\t</Layout.Footer>\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './store';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}