{"version":3,"sources":["store/reducers/action-types.js","store/reducers/auth/index.js","store/reducers/event/index.js","store/reducers/index.js","store/index.js","firebase/index.js","store/reducers/auth/action-creators.js","store/reducers/event/action-creators.js","enums/index.js","components/EventsCalendar.jsx","components/EventForm.jsx","pages/Event.jsx","components/LoginForm.jsx","pages/Login.jsx","components/RegistrationForm.jsx","pages/Registration.jsx","components/AppRouter.jsx","components/Header.jsx","App.js","index.js"],"names":["SET_AUTH","SET_IS_LOADING","SET_USER","SET_EVENTS","ADD_EVENT","initialState","isAuth","isLoading","user","events","reducers","auth","state","action","type","payload","event","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","getAuth","database","getDatabase","dbRef","ref","AuthActionCreators","setUser","setIsAuth","setIsLoading","login","email","password","dispatch","a","signInWithEmailAndPassword","then","userCredential","uid","catch","error","message","logout","signOut","registration","createUserWithEmailAndPassword","EventActionCreators","setEvents","addEvent","uploadEvents","newEvent","emailHash","MD5","toString","newEvents","slice","push","set","console","getEvents","get","child","snapshot","exists","val","eventStatus","SmallEventsList","styled","ul","SmallEventsListItem","li","attrs","props","className","status","isPastEvents","EventCalendar","useState","modalVisible","setModalVisible","selectedEvents","setSelectedEvents","useSelector","useDispatch","fullscreen","style","width","zIndex","dateCellRender","value","formatedDate","format","currentDayEvents","filter","el","date","isSameOrBefore","moment","map","i","description","onSelect","currentEvents","id","length","title","visible","footer","onCancel","itemLayout","dataSource","pagination","pageSize","renderItem","item","Item","Meta","justify","Group","size","buttonStyle","onChange","e","target","changeStatus","Button","EventForm","submit","Form","useForm","form","setEvent","onFinish","resetFields","labelCol","span","label","name","rules","required","TextArea","rows","getFieldValue","validator","_","isSameOrAfter","Promise","resolve","reject","Error","htmlType","Event","useEffect","locale","success","position","bottom","right","placement","shape","onClick","icon","PlusOutlined","LoginForm","setEmail","setPassword","formRef","createRef","placeholder","Password","loading","to","setFieldsValue","fillForm","StyledLoginWrapper","div","Login","RegistrationForm","StyledRegistrationWrapper","Registration","AppRouter","path","exact","component","UserName","Header","UserOutlined","theme","mode","inlineCollapsed","selectable","App","onAuthStateChanged","Content","Footer","textAlign","href","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.daf5b561.chunk.js","sourcesContent":["export const SET_AUTH = \"SET_AUTH\";\r\nexport const SET_IS_LOADING = \"SET_IS_LOADING\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const SET_EVENTS = \"SET_EVENTS\";\r\nexport const ADD_EVENT = \"ADD_EVENT\";","import { SET_AUTH, SET_IS_LOADING, SET_USER } from \"../action-types\";\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    isLoading: false,\r\n    user: {},\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_AUTH:\r\n            return { ...state, isAuth: action.payload, isLoading: false };\r\n        case SET_USER:\r\n            return { ...state, user: action.payload };\r\n        case SET_IS_LOADING:\r\n            return { ...state, isLoading: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_EVENT, SET_EVENTS } from \"../action-types\";\r\n\r\nconst initialState = {\r\n    events: []\r\n}\r\n\r\nexport default function eventReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_EVENTS:\r\n            return { ...state, events: action.payload };\r\n        case ADD_EVENT: {\r\n            return { ...state, events: [...state.events, action.payload] }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import auth from \"./auth\";\r\nimport event from \"./event\";\r\n\r\nconst reducers = {\r\n    auth,\r\n    event\r\n};\r\n\r\nexport default reducers;","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\"\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase, ref } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth(app);\r\nexport const database = getDatabase(app);\r\nexport const dbRef = ref(database);","import { SET_AUTH, SET_IS_LOADING, SET_USER } from \"../action-types\";\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../../../firebase\";\r\nimport { message } from \"antd\";\r\n\r\nexport const AuthActionCreators = {\r\n    setUser: (user) => {\r\n        return { type: SET_USER, payload: user }\r\n    },\r\n    setIsAuth: (auth) => {\r\n        return { type: SET_AUTH, payload: auth }\r\n    },\r\n    setIsLoading: (isLoading) => {\r\n        return { type: SET_IS_LOADING, payload: isLoading }\r\n    },\r\n\r\n    login: (email, password) => async (dispatch) => {\r\n        dispatch(AuthActionCreators.setIsLoading(true));\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                const user = userCredential.user;\r\n                dispatch(AuthActionCreators.setUser({ email: user.email, uid: user.uid }));\r\n                dispatch(AuthActionCreators.setIsAuth(true));\r\n                dispatch(AuthActionCreators.setIsLoading(false));\r\n            })\r\n            .catch((error) => {\r\n                message.error(\"Неправильный логин или пароль\");\r\n                dispatch(AuthActionCreators.setIsLoading(false));\r\n            });\r\n    },\r\n\r\n    logout: () => async (dispatch) => {\r\n        auth.signOut();\r\n        dispatch(AuthActionCreators.setUser({}));\r\n        dispatch(AuthActionCreators.setIsAuth(false));\r\n    },\r\n\r\n    registration: (email, password) => async (dispatch) => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                dispatch(AuthActionCreators.login(email, password));\r\n            })\r\n            .catch((error) => {\r\n                message.error(error.message);\r\n            });\r\n    }\r\n}","import { SET_EVENTS, ADD_EVENT } from \"../action-types\";\r\nimport { dbRef, database } from \"../../../firebase\";\r\nimport { ref, set, get, child } from \"firebase/database\";\r\nimport { MD5 } from \"crypto-js\";\r\n\r\n\r\nexport const EventActionCreators = {\r\n    setEvents: (events) => {\r\n        return { type: SET_EVENTS, payload: events }\r\n    },\r\n    addEvent: (event) => {\r\n        return { type: ADD_EVENT, payload: event }\r\n    },\r\n\r\n    uploadEvents: (user, events, newEvent = null) => async dispatch => {\r\n        try {\r\n            const emailHash = MD5(user.email).toString();\r\n            const newEvents = events.slice();\r\n\r\n            if (newEvent) {\r\n                newEvents.push(newEvent);\r\n                dispatch(EventActionCreators.addEvent(newEvent));\r\n            }\r\n\r\n            set(ref(database, emailHash), {\r\n                events: newEvents\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    },\r\n\r\n    getEvents: (user) => async dispatch => {\r\n        try {\r\n            let events = [];\r\n            const emailHash = MD5(user.email).toString();\r\n\r\n            await get(child(dbRef, emailHash)).then((snapshot) => {\r\n                if (snapshot.exists()) {\r\n                    events = snapshot.val().events;\r\n                }\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n\r\n            dispatch(EventActionCreators.setEvents(events));\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n}","export const eventStatus = {\r\n    PLANNED: \"planned\",\r\n    DONE: \"done\",\r\n    CANCELLED: \"cancelled\"\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, Modal, List, Radio, Row } from \"antd\";\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\nimport { eventStatus } from '../enums';\r\nimport { EventActionCreators } from '../store/reducers/event/action-creators';\r\n\r\n\r\nconst SmallEventsList = styled.ul`\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n`;\r\n\r\nconst SmallEventsListItem = styled.li.attrs(props => ({\r\n    className: props.status\r\n}))`\r\n    width: 100%;\r\n    overflow: hidden;\r\n    font-size: 14px;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    color: ${props => props.isPastEvents ? \"lightblue\" : \"blue\"};\r\n\r\n    ::before {\r\n        content: \"● \";\r\n    }\r\n\r\n    &.done {\r\n        ::before {\r\n            color: green;\r\n        }\r\n    }\r\n\r\n    &.cancelled {\r\n        ::before {\r\n            color: red;\r\n        }\r\n    }\r\n\r\n    &.planned {\r\n        ::before {\r\n            color: gold;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst EventCalendar = ({ events }) => {\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [selectedEvents, setSelectedEvents] = useState([]);\r\n    const { user } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    function dateCellRender(value) {\r\n        const formatedDate = value.format('YYYY-MM-DD');\r\n        const currentDayEvents = events.filter(el => el.date === formatedDate);\r\n        const isPastEvents = value.isSameOrBefore(moment());\r\n        return (\r\n            <SmallEventsList>\r\n                {currentDayEvents.map((el, i) =>\r\n                    <SmallEventsListItem\r\n                        isPastEvents={isPastEvents}\r\n                        status={el.status}\r\n                        key={i}\r\n                    >\r\n                        {el.description}\r\n                    </SmallEventsListItem>\r\n                )}\r\n            </SmallEventsList>\r\n        );\r\n    }\r\n\r\n    const selectDate = value => {\r\n        const formatedDate = value.format('YYYY-MM-DD');\r\n        const currentEvents = events\r\n            .map((el, i) => { return { ...el, id: i } })\r\n            .filter(el => el.date === formatedDate);\r\n        if (currentEvents.length > 0) {\r\n            setModalVisible(true);\r\n            setSelectedEvents(currentEvents);\r\n        }\r\n    }\r\n\r\n    const changeStatus = (e, item) => {\r\n        const newEvents = events.slice();\r\n        item.status = e.target.value;\r\n        newEvents[item.id].status = item.status;\r\n        dispatch(EventActionCreators.setEvents(newEvents));\r\n        dispatch(EventActionCreators.uploadEvents(user, newEvents));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Calendar\r\n                fullscreen={true}\r\n                style={{ width: \"800px\", zIndex: 1 }}\r\n                dateCellRender={dateCellRender}\r\n                onSelect={selectDate}\r\n            />\r\n            <Modal\r\n                title=\"Список событий\"\r\n                visible={modalVisible}\r\n                footer={null}\r\n                onCancel={() => setModalVisible(false)}\r\n            >\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={selectedEvents}\r\n                    pagination={{pageSize: 3}}\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <List.Item.Meta key={item.id + item.date} />\r\n                            {item.description}\r\n                            <Row justify=\"end\">\r\n                                <Radio.Group\r\n                                    size=\"small\"\r\n                                    buttonStyle=\"solid\"\r\n                                    value={item.status}\r\n                                    onChange={e => changeStatus(e, item)}\r\n                                >\r\n                                    <Radio.Button value={eventStatus.PLANNED}>Planned</Radio.Button>\r\n                                    <Radio.Button value={eventStatus.DONE}>Done</Radio.Button>\r\n                                    <Radio.Button value={eventStatus.CANCELLED}>Cancelled</Radio.Button>\r\n                                </Radio.Group>\r\n\r\n                            </Row>\r\n\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventCalendar;\r\n","import React, { useState } from 'react';\r\nimport { DatePicker, Form, Input, Button, Row } from \"antd\";\r\nimport moment from 'moment';\r\nimport { eventStatus } from '../enums';\r\n\r\nconst EventForm = ({ submit }) => {\r\n    const [form] = Form.useForm();\r\n    const [event, setEvent] = useState({\r\n        date: \"\",\r\n        description: \"\",\r\n        status: eventStatus.PLANNED\r\n    });\r\n\r\n    const onFinish = () => {\r\n        submit(event);\r\n        setEvent({\r\n            date: \"\",\r\n            description: \"\",\r\n            status: eventStatus.PLANNED\r\n        })\r\n        form.resetFields();\r\n    }\r\n\r\n    return (\r\n        <Form form={form} onFinish={onFinish} labelCol={{ span: 6 }}>\r\n            <Form.Item\r\n                label=\"Описание:\"\r\n                name=\"decription\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Добавьте описание события\"\r\n                    }\r\n                ]}\r\n            >\r\n                <Input.TextArea\r\n                    rows={5}\r\n                    value={event.description}\r\n                    onChange={(e => setEvent({ ...event, description: e.target.value }))}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Дата:\"\r\n                name=\"date\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Выберите дату\"\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                            if (value.isSameOrAfter(moment())) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject(new Error(\"Выбранная дата уже прошла\"));\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <DatePicker onChange={date => setEvent({ ...event, date: date?.format('YYYY-MM-DD') })} />\r\n            </Form.Item>\r\n\r\n            <Row justify=\"end\">\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">Создать</Button>\r\n                </Form.Item>\r\n            </Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default EventForm;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Layout, Row, Button, Modal, message, Affix, Tooltip, ConfigProvider } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { EventActionCreators } from \"../store/reducers/event/action-creators\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport EventCalendar from '../components/EventsCalendar';\r\nimport EventForm from '../components/EventForm';\r\nimport 'moment/locale/ru';\r\nimport locale from 'antd/lib/locale/ru_RU';\r\n\r\n\r\nconst Event = () => {\r\n    const dispatch = useDispatch();\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const { events } = useSelector(state => state.event);\r\n    const { user } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(EventActionCreators.getEvents(user));\r\n    }, [])\r\n\r\n    const submitForm = newEvent => {\r\n        setModalVisible(false);\r\n        dispatch(EventActionCreators.uploadEvents(user, events, newEvent));\r\n        message.success(\"Событие добавлено\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <ConfigProvider locale={locale}>\r\n                    <Row justify=\"center\" >\r\n                        <EventCalendar events={events} />\r\n                    </Row>\r\n                    <Modal\r\n                        title=\"Добавить новое событие\"\r\n                        visible={modalVisible}\r\n                        footer={null}\r\n                        onCancel={() => setModalVisible(false)}\r\n                    >\r\n                        <EventForm submit={submitForm} />\r\n                    </Modal>\r\n                </ConfigProvider>\r\n                <Affix style={{ position: 'fixed', bottom: 20, right: 20, zIndex: 10 }} >\r\n                    <Tooltip placement=\"left\" title=\"Добавить новое событие\">\r\n                        <Button\r\n                            type=\"primary\"\r\n                            size=\"large\"\r\n                            shape=\"circle\"\r\n                            onClick={() => setModalVisible(true)}\r\n                            icon={<PlusOutlined />}\r\n                        >\r\n                        </Button>\r\n                    </Tooltip>\r\n                </Affix>\r\n            </Layout>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Event;\r\n","import React, { createRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Input, Button, Tooltip } from \"antd\";\r\nimport { AuthActionCreators } from \"../store/reducers/auth/action-creators\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst LoginForm = () => {\r\n\r\n    const { isLoading } = useSelector(state => state.auth);\r\n    const [form] = Form.useForm();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const formRef = createRef();\r\n    const dispatch = useDispatch();\r\n\r\n    const submitForm = () => {\r\n        dispatch(AuthActionCreators.login(email, password));\r\n    }\r\n\r\n    const fillForm = () => {\r\n        const [email, password] = [\"test@test.test\", \"testpass\"];\r\n        form.setFieldsValue({ email, password });\r\n        setEmail(email);\r\n        setPassword(password);\r\n    }\r\n\r\n    return (\r\n        <Form name=\"login\" ref={formRef} form={form} onFinish={submitForm} >\r\n\r\n            <Form.Item name=\"email\" rules={[{ required: true, message: \"Введите email\" }]} >\r\n                <Input value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: \"Введите пароль\" }]} >\r\n                <Input.Password value={password} placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoading} style={{ width: \"100%\" }}>Login</Button>\r\n                <span>Or </span>\r\n                <Link to=\"/registration\">register</Link>\r\n            </Form.Item>\r\n\r\n            <Tooltip title=\"тестовый пользователь\">\r\n                <Button type=\"dashed\" htmlType=\"button\" onClick={() => fillForm()}>test user</Button>\r\n            </Tooltip>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport { Layout, Card } from 'antd';\r\nimport LoginForm from '../components/LoginForm';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoginWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: calc(100vh - 128px);\r\n`;\r\n\r\nconst Login = () => {\r\n    return (\r\n        <Layout>\r\n            <StyledLoginWrapper>\r\n                <Card>\r\n                    <LoginForm />\r\n                </Card>\r\n            </StyledLoginWrapper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { AuthActionCreators } from \"../store/reducers/auth/action-creators\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst RegistrationForm = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const submitForm = () => {\r\n        dispatch(AuthActionCreators.registration(email, password))\r\n    }\r\n\r\n    return (\r\n        <Form name=\"registration\" onFinish={submitForm} >\r\n\r\n            <Form.Item name=\"email\" rules={[{ required: true, message: \"Введите email\" }]} >\r\n                <Input value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: \"Введите пароль\" }]} >\r\n                <Input.Password value={password} placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>Registration</Button>\r\n                <span>Or </span>\r\n                <Link to=\"/login\">login</Link>\r\n            </Form.Item>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import React from 'react';\r\nimport { Layout, Card } from 'antd';\r\nimport RegistrationForm from '../components/RegistrationForm';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledRegistrationWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: calc(100vh - 128px);\r\n`;\r\n\r\nconst Registration = () => {\r\n    return (\r\n        <Layout>\r\n            <StyledRegistrationWrapper>\r\n                <Card>\r\n                    <RegistrationForm />\r\n                </Card>\r\n            </StyledRegistrationWrapper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Registration;\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Event from \"../pages/Event\";\r\nimport Login from \"../pages/Login\";\r\nimport Registration from '../pages/Registration';\r\n\r\nconst AppRouter = () => {\r\n    const { isAuth } = useSelector(state => state.auth);\r\n\r\n    return (\r\n        isAuth\r\n            ?\r\n            <Switch>\r\n                <Route\r\n                    path={\"/calendar\"}\r\n                    exact={true}\r\n                    component={Event}\r\n                />\r\n                <Redirect to={\"/calendar\"} />\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                <Route\r\n                    path={\"/registration\"}\r\n                    exact={true}\r\n                    component={Registration}\r\n                />\r\n                <Route\r\n                    path={\"/login\"}\r\n                    exact={true}\r\n                    component={Login}\r\n                />\r\n                <Redirect to={\"/login\"} />\r\n            </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React from 'react'\r\nimport { Layout, Row, Menu, Space, Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AuthActionCreators } from '../store/reducers/auth/action-creators';\r\nimport styled from 'styled-components';\r\n\r\nconst UserName = styled.div`\r\n    color: white;\r\n    max-width: 160px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n    const { isAuth, user } = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <Layout.Header>\r\n            <Row justify=\"end\">\r\n                {\r\n                    isAuth &&\r\n                    <Space>\r\n                        <Avatar icon={<UserOutlined />} />\r\n                        <UserName>{user.email}</UserName>\r\n                        <Menu theme=\"dark\" mode=\"inline\" inlineCollapsed={false} selectable={false}>\r\n                            <Menu.Item key={1} onClick={() => dispatch(AuthActionCreators.logout())}>\r\n                                Logout\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Space>\r\n                }\r\n            </Row>\r\n        </Layout.Header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import { Layout } from 'antd';\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AuthActionCreators } from \"./store/reducers/auth/action-creators\";\nimport AppRouter from \"./components/AppRouter\";\nimport Header from \"./components/Header\";\n\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\n\nconst App = () => {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tonAuthStateChanged(auth, (user) => {\n\t\t\tif (user) {\n\t\t\t\tdispatch(AuthActionCreators.setUser({ email: user.email, uid: user.uid }));\n\t\t\t\tdispatch(AuthActionCreators.setIsAuth(true));\n\t\t\t}\n\t\t})\n\t}, [])\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Header />\n\t\t\t<Layout.Content>\n\t\t\t\t<AppRouter />\n\t\t\t</Layout.Content>\n\t\t\t<Layout.Footer style={{ textAlign: 'center' }}>\n\t\t\t\t<span> ©2021 </span>\n\t\t\t\t<a href=\"https://github.com/Nokkup/event-calendar\">Github link</a>\n\t\t\t</Layout.Footer>\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './store';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename=\"/event-calendar\">\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}